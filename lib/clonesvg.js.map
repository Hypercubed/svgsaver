{"version":3,"sources":["../src/clonesvg.js"],"names":[],"mappings":"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","file":"clonesvg.js","sourcesContent":["import {isUndefined, isDefined, isFunction} from './utils';\r\n\r\n// adapted from https://github.com/angular/angular.js/issues/2866#issuecomment-31012434\r\nfunction getComputedStyles(node) {\r\n  if (isDefined(node.currentStyle)) {  //for old IE\r\n    return node.currentStyle;\r\n  } else if (isDefined(window.getComputedStyle)){  //for modern browsers\r\n    return node.ownerDocument.defaultView.getComputedStyle(node,null);\r\n  } else {\r\n    return node.style;\r\n  }\r\n}\r\n\r\n// convert computed styles to something we can iterate over\r\n// adapted from http://stackoverflow.com/questions/754607/can-jquery-get-all-css-styles-associated-with-an-element/6416527#6416527\r\nfunction convertComputedStyle(computed) {\r\n  if(isDefined(window.getComputedStyle)){\r\n    var styles = {};\r\n    for(var i = 0, l = computed.length; i < l; i++){\r\n      var prop = computed[i];\r\n      var val = computed.getPropertyValue(prop);\r\n      styles[prop] = val;\r\n    }\r\n    return styles;\r\n  }\r\n  return computed;\r\n}\r\n\r\nfunction copyStyles(source, target, defaultStyles) {  // styles === false - copy none, true - copy all\r\n  if (defaultStyles === false) { return; }\r\n\r\n  var srcStyles = getComputedStyles(source);\r\n\r\n  if (defaultStyles === true) {    // copy all styles\r\n    for (let key in convertComputedStyle(srcStyles)) {\r\n      target.style[key] = srcStyles[key];\r\n    }\r\n    return;\r\n  }\r\n\r\n  var parStyles = getComputedStyles(target.parentNode);\r\n\r\n  for (let key in defaultStyles) {\r\n    var src = srcStyles[key];\r\n    if (src && src !== defaultStyles[key] && src !== parStyles[key] ) {\r\n      target.style[key] = src;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cleanAttrs(el, attrs, styles) {  // attrs === false - remove all, attrs === true - allow all\r\n  if (attrs === true) { return; }\r\n\r\n  Array.prototype.slice.call(el.attributes)\r\n    .forEach(function(attr) {\r\n      // remove if it is not style nor on attrs  whitelist\r\n      // keeping attributes that are also styles because attributes override\r\n      if (attr.specified) {\r\n        if(attrs === false || (isUndefined(styles[attr.name]) && attrs.indexOf(attr.name) < 0)) {\r\n          el.removeAttribute(attr.name);\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nexport function cloneSvg(src, attrs, styles) {\r\n  var clonedSvg = src.cloneNode(true);\r\n  var srcChildren = src.querySelectorAll('*');\r\n\r\n  Array.prototype.slice.call(clonedSvg.querySelectorAll('*'))\r\n    .forEach(function( target, index ) {\r\n      copyStyles(srcChildren[index], target, styles);\r\n      cleanAttrs(target, attrs, styles);\r\n    });\r\n\r\n  return clonedSvg;\r\n}\r\n"]}